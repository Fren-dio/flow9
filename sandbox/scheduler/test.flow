import sandbox/scheduler/scheduler;
import math/md5;

JobContext(
	filename : string,
);

JobOutput(
	output : string
);

makeCompileProgramJob(scheduler : Scheduler<JobContext, JobOutput>, file : string) -> Job<JobContext, JobOutput> {
	parentId = makeJobId(scheduler);
	cacheId = md5(getFileContent(file));

	parseJob = makeParseJob(scheduler, parentId, cacheId, file);
	addJob(scheduler, parseJob);
	Job(
		parentId,
		2, 0,
		[parseJob.id],
		"Compile Program",
		JobContext(file),
		cacheId,
		true,
		\task : Task<JobContext, JobOutput> -> {
			Promise(
				\onDone : (JobOutput) -> void, onError : (string) -> void -> {
					onError("TODO: Implement compile of " + file)
				}
			)
		},
		ref None()
	);
}

makeParseJob(scheduler : Scheduler<JobContext, JobOutput>, parentId : int, cacheId : string, file : string) -> Job<JobContext, JobOutput> {
	Job(
		makeJobId(scheduler),
		1, parentId,
		[
		],
		"Parse",
		JobContext(file),
		cacheId,
		true,
		\task : Task<JobContext, JobOutput> -> {
			Promise(
				\onDone : (JobOutput) -> void, onError : (string) -> void -> {
					onDone(JobOutput(getFileContent(file)));
				}
			)
		},
		ref None()
	)
}

main() {
	scheduler = makeScheduler();

	dispose = runScheduler(scheduler);

	job1 = makeCompileProgramJob(scheduler, "file.flow");
	addJob(scheduler, job1);

	timer(1000, \ -> {
		dispose();
		quit(0);
	})
}
