import tools/dsl/dsl_parse;

export {
	// This adds bag comprehensions to a language
	defineDataFun(language : DslLanguage) -> DslLanguage;
}

defineDataFun(language : DslLanguage) -> DslLanguage {
	// OK, extend this language with the "dot" syuntax
	bag = extendGrammar(language.grammar, << 
		atom = atom | datafun;

		datafun = '[' ws exp '|' ws datafun_exps ']' ws $"datafun_2";

		datafun_exps = // listof(datafun_exp, ",")
			$"nil" datafun_exp $"cons" ("," ws datafun_exp $"cons")*;

		datafun_exp = id ws "in" ws exp $"datafun_in_2" 
			| exp; // This is just a filter
	>>);

	println(prettyDsl(parseProgram("bag", bag, << 
		[ a | a in list, a != 2]
	>>)));

	// TODO: Implement this language

	DslLanguage(
		language with grammar = bag;
	)
}
