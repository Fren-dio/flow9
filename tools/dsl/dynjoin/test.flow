import tools/dsl/dynjoin/grammar;
import tools/dsl/dsl_eval;
import tools/dsl/dsl_runtime_common;

main() {
	grammar = defineDynJoin();
	program = parseProgram("test", grammar, <<

		/*inl add ~a ~b = a + b
		inl main () =
			inl x = 1i32
			inl y = 2
			add x y*/
		
		add = \~a, ~b -> a + b;
		add(1 + 3, 1 + 2)	// Should result in a = 1; b = 2; a + b

/*		~a = 2+3;
		println(5);	// Should happen at compile time
		a*/
	>>);

	env0 = makeDslEnv();
	env = DslEnv(env0 with locals = addCommonDslRuntime([], env0.locals));

	println("Before eval:");
	println(prettyDsl(program));

	value = evaluateDsl(env, program);
	println("\nAfter eval:");
	println(prettyDsl(value));
	quit(0);
}
