import tools/dsl/dsl_parse;
import tools/dsl/dsl_runtime;
import tools/dsl/languages/ast_syntax;

export {
	// This adds arrays to a language
	// Syntax:
	// [] is the empty array
	// [ 1, 2, ..., 3] is array construction
	// a[1] is indexing
	defineArrays(language : DslLanguage) -> DslLanguage;
}

defineArrays(language : DslLanguage) -> DslLanguage {
	arrays = extendGrammar(language.grammar, << 
		atom = atom | '[' ws exps ']' ws $"array_1";

		postfix = postfix | '[' ws exp ']' ws $"array_index_2";
	>>);

	rewrites = defineDslRewriting(defineDslAst().grammar, language.grammar, ";", <<
		// [ exps ] => exps - given the list representation
		array($e) => $e;
		// a[i] => listAt(a, i);
		array_index($a, $i) => listAt($a, $i);
	>>, <<
			array => 1000000;
			array_index => 1000000;
		>>,
		<< 0 >>
	);
	
	DslLanguage("arrays", arrays, Some(rewrites), None(), None(),
		defineDslRuntime(language, [
			Pair("listAt", <<
				\xs, i -> {
					if (i <= 0) head(xs)
					else listAt(tail(xs), i - 1)
				}
			>>),
		]),
		[], Some(language)
	);
}
