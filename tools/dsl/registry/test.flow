import tools/dsl/registry/dsl_registry;

main() {
	registerDslParser("value", << 
		exp = double | int | "true" ws | "false" ws;
		ws exp
	>>, ["ws", "int", "double"]);

	registerDslParserExtension("list", <<
		exp = exp | '[' ws exps ']' ws  $"array_1";

		exps = $"nil" exp $"cons" ("," ws exp $"cons")* ("," ws)? 
			| $"nil";
	>>);

	input = DslAstEnv(
		"value-list-syntax",
		DslString(" [1.23, 2] "),
		makeTree(),
		""
	);
	printDslAstEnv(input);
	output = performDslTransformations("parse", "value-list", input);
	printDslAstEnv(output);
	quit(0);
}

printDslAstEnv(e : DslAstEnv) -> void {
	println(e.language + ": " + e.error);
	println(prettyDsl(e.ast));
	println("");
}
