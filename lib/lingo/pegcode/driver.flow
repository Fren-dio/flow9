import lib/lingo/pegaction;
import lib/lingo/pegcode/grammar2code;
import lib/lingo/pegcode/rename_bindings;
import lib/lingo/pegcode/optimize_grammar;
import lib/lingo/pegcode/pegcode;
import lib/lingo/pegcode/lingocode;
import lib/lingo/pegcode/parsic;
// import lingo/pegcode/pegcode2flow;

export {
	compilePegGrammar(s : string) -> [PegOp];
	compilePegGrammar2(s : string) -> Pair<[PegOp], Tree<int, string>>;
}

compilePegGrammar(gr : string) -> [PegOp] {
	compilePegGrammar2(gr).first;
}

compilePegGrammar2(gr : string) -> Pair<[PegOp], Tree<int, string>> {
	// println("Parsing lingo grammar 2");
	r : flow = parsic(pegOps4Lingo, gr, defaultPegActions);

	g = cast(r : flow -> Grammar);

//	printGrammar(r);
	renamed = optimizeGrammar(renameBindings(inlineProductions(processNestedSequences(g))));

	// printGrammar(renamed);

	code = grammar2code(renamed);

	// setFileContent("lingo/pegcode/out.flow", pegcode2flow("Lingo", code.first, code.second));

	// printPegcode(code.first, code.second);
	code;
}
