import material/material_ui;

main() {
	manager = makeMaterialManager([]);
	setRendererType(getUrlParameterDef("renderer", "html"));

	selectedIdx = make(-1);
	fpprint("selectedIdx")(selectedIdx);

	itemsLen = s2i(getUrlParameterDef("items", "1000"));
	data = make(generate(0, itemsLen, \i -> i));
	rowsTextFn = \v -> generate(0, 20, \i -> MDynamicText(const("Line " + i2s(v)), []));
	rowsEllipsisFn = \v -> generate(0, 20, \i -> MEllipsisText("Line " + i2s(v), []));
	rowsDropdownFn = \v -> generate(0, 20, \i -> MDropDown(make(-1), "Pick", ["One", "Two", "Three"], [
		MWidth(120.0),
		MGroups([Pair(0, "First Group"), Pair(2, "Second Group")]),
		MOutlined(),
		MCondensed(true)
	]));
	columns = generate(0, 20, \i -> MColumn("col" + i2s(i), "", 48, []));

	style = [
		// MSingleSelection(selectedIdx),
		MPaginationAutoScaling(),
		// MListSelectionEnabled(fselectLift(data, \arr -> mapi(arr, \i, __ -> const(i % 2 == 0)))),
		// TScrollEnabled(const(true)),
		MWidthByContent(),
		MRowHeight(24.)
	];

	table = \fn : (int) -> [Material] ->
		MDynamicDataTable(
			columns,
			fselect(data, FLift(\d -> map(d, fn))),
			style
		);

	tableDomRender = \fn : (int) -> [Material] ->
		MDynamicDataTable(
			columns,
			fselect(data, FLift(\d -> map(d, fn))),
			concat(style, [MDomRender()])
		);

	tableLightWeight = \fn : (int) -> [Material] ->
		MLightweightDataTable(
			columns,
			data,
			fn,
			style
		);

	if (isUrlParameterTrue("test")) {
		testRender("regular text", table(rowsTextFn));
		testRender("dom text", tableDomRender(rowsTextFn));
		testRender("light text", tableLightWeight(rowsTextFn));

		testRender("regular ellipsis", table(rowsEllipsisFn));
		testRender("dom ellipsis", tableDomRender(rowsEllipsisFn));
		testRender("light ellipsis", tableLightWeight(rowsEllipsisFn));

		testRender("regular dropdown", table(rowsDropdownFn));
		testRender("dom dropdown", tableDomRender(rowsDropdownFn));
		testRender("light dropdown", tableLightWeight(rowsDropdownFn));
	} else {
		println("before render");
		content = MScrollBox((if (isUrlParameterTrue("light")) tableLightWeight else if (isUrlParameterTrue("dom_render")) tableDomRender else table)(rowsDropdownFn));
		start = timestamp();
		mrender(manager, true, content);
		end = timestamp();
		println("Render time : " + d2s(end - start));
	}
}

testRender(name : string, content : Material) {
	manager = makeMaterialManager([]);
	// println("before render " + name);
	start = timestamp();
	d = mrender(manager, true, MAvailable(MScrollBox(content), TFixed(2048.0, 1024.0)));
	end = timestamp();
	println("Render time " + name + ": " + d2s(end - start));
	d();
}