import material/material_ui;

main() {
	manager = makeMaterialManager([]);
	setRendererType(getUrlParameterDef("renderer", "html"));

	selectedIdx = make(-1);
	fpprint("selectedIdx")(selectedIdx);

	itemsLen = s2i(getUrlParameterDef("items", "100"));
	data = make(generate(0, itemsLen, \i -> i));
	rowsFn = \v -> generate(0, 30, \i -> MText("Line " + i2s(v), []));
	columns = generate(0, 30, \i -> MColumn("col" + i2s(i), "", 48, []));

	style = [
		// MSingleSelection(selectedIdx),
		// MPaginationAutoScaling(),
		// MListSelectionEnabled(fselectLift(data, \arr -> mapi(arr, \i, __ -> const(i % 2 == 0)))),
		TScrollEnabled(const(true)),
		MRowHeight(16.)
	];

	table =
		MDynamicDataTable(
			columns,
			fselect(data, FLift(\d -> map(d, rowsFn))),
			style
		);

	tableDomRender =
		MDynamicDataTable(
			columns,
			fselect(data, FLift(\d -> map(d, rowsFn))),
			concat(style, [MDomRender()])
		);

	content = MScrollBox(if (isUrlParameterTrue("dom_render")) tableDomRender else table);

	println("before render");
	start = timestamp();
	mrender(manager, true, content);
	end = timestamp();
	println("Render time : " + d2s(end - start));
}