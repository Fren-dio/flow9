import material/material2tropic;
import material/material_ui;

main() {
	setRendererType("html");
	manager = makeMaterialManager([]);

	email = make("");
	pass = make("");

	emailBeenFocused = make(false);
	passwdBeenFocused = make(false);

	content =
		MLines([
			MTextInput(email,
				[MFloatingLabel(), TextInputType(EmailType()), AutoCompleteType(ACUserName()), MLabel("emailOrUserName"), MHaveBeenFocused(emailBeenFocused),
					// MFilterAction(\__ -> if (fgetValue(emailOk) && fgetValue(passwordOk)) okFn() else yieldFocus(manager, true))
				],
				[
					// MInputError(emailInputError, [MRequiredField(), MInputIsOk(emailOk), MInputErrorColor(make(inputErrorColor)), MInputErrorFont(inputErrorFont)]),
					IScriptId("email"), FAccessAttribute("name", const("username")),
					// MEnabled(const(allowDefaultLogin(oauthProviders.providers, None()))),
					// MFocusEnabled(emailInputFocusEnabled)
				]
			),
			MTextInput(pass,
				[MFloatingLabel(), TextInputType(PasswordType()), AutoCompleteType(ACCurrentPassword()), MLabel(_("Password")),
					// MFilterAction(\__ -> if (fgetValue(emailOk) && fgetValue(passwordOk)) okFn()),
					MHaveBeenFocused(passwdBeenFocused)
				],
				[
					MInputShowPassword(make(false)),
					// MInputError(passwdInputError, [MMaxLines(-1), MRequiredField(), MInputIsOk(passwordOk), MInputErrorColor(make(inputErrorColor)), MInputErrorFont(inputErrorFont)]),
					IScriptId("password"),
					FAccessAttribute("name", const("password")),
					// MFocused(passwordInFocus)
				]
			)
		]);
	
	mrender(manager, true, MBorder4(20., content));
}