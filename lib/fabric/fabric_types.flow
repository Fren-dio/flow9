import material/material;

export {
	Fabric ::= BLet, BCapture, BSelect, BContainer, BTable, BMaterial, BGetEnv, BBidirectional, BTimer;

	BLet(name : string, value : flow, scope : Fabric);
	BCapture(name : string, value : flow, scope : Fabric);
	BSelect(names : [string], fn : (FabricEnv, values : [flow]) -> Fabric);
	BContainer(items : [Fabric], style : BContainerStyle);
		BContainerStyle(downwards : bool, group : bool, baseline : bool);
		defBContainer() -> BContainerStyle;
	BTable(rows : [[Fabric]]);
		// BTableStyle();
	BMaterial(material : Material);

	BGetEnv(fn : (FabricEnv) -> Fabric);

	BBidirectional(a : string, b : string, a2b : (flow) -> flow, b2a : (flow) -> flow);
	
	BTimer(name : string, deltaS : double);

	// Environment stuff
	FabricEnv(parent : Maybe<FabricEnv>, values : ref Tree<string, DynamicBehaviour<flow>>);
}

defBContainer() -> BContainerStyle {
	BContainerStyle(true, false, false)
}
