import fabric/env;

export {
	BLines(items : [Fabric]) -> Fabric;
	BLinesX(items : [Fabric], style : BContainerStyle) -> Fabric;
	BCols(items : [Fabric]) -> Fabric;
	BColsX(items : [Fabric], style : BContainerStyle) -> Fabric;
	BBCols(items : [Fabric]) -> Fabric;
	BBColsX(items : [Fabric], style : BContainerStyle) -> Fabric;
	BGroup(items : [Fabric]) -> Fabric;
	BGroupX(items : [Fabric], style : BContainerStyle) -> Fabric;

	BText(text : string, style : [MTextStyle]) -> Fabric;
	BTextInput(name : string, style : [MTextInputStyle], state : [MTextInputState]) -> Fabric;
	BDoubleInput(name : string, style : [MTextInputStyle], state : [MTextInputState]) -> Fabric;
	BTextButton(text : string, onClick : (FabricEnv) -> void, style : [MTextButtonStyle], state : [MButtonState]) -> Fabric;

	BSlider(name : string, style : [MSliderStyle]) -> Fabric;
}

BLines(items : [Fabric]) -> Fabric {
	BLinesX(items, defBContainer())
}
BLinesX(items : [Fabric], style : BContainerStyle) -> Fabric {
	BContainer(items, BContainerStyle(style with downwards = true, group = false))
}

BCols(items : [Fabric]) -> Fabric {
	BColsX(items, defBContainer())
}
BColsX(items : [Fabric], style : BContainerStyle) -> Fabric {
	BContainer(items, BContainerStyle(style with downwards = false, group = false))
}

BBCols(items : [Fabric]) -> Fabric {
	BBColsX(items, defBContainer())
}
BBColsX(items : [Fabric], style : BContainerStyle) -> Fabric {
	BContainer(items, BContainerStyle(style with downwards = false, group = false, baseline = true))
}

BGroup(items : [Fabric]) -> Fabric {
	BGroupX(items, defBContainer())
}
BGroupX(items : [Fabric], style : BContainerStyle) -> Fabric {
	BContainer(items, BContainerStyle(style with downwards = false, group = true))
}

BText(text : string, style : [MTextStyle]) -> Fabric {
	BMaterial(MText(text, style))
}

BTextInput(name : string, style : [MTextInputStyle], state : [MTextInputState]) -> Fabric {
	BGetEnv(\env -> {
		value = getOrMakeFabricValue(env, name, "");
		BMaterial(MTextInput(value, style, state))
	})
}

BDoubleInput(name : string, style : [MTextInputStyle], state : [MTextInputState]) -> Fabric {
	BGetEnv(\env -> {
		value = getOrMakeFabricValue(env, name, 0.0);
		svalue = make(d2s(getValue(value)));
		BMaterial(
			MConstruct([
				\ -> {
					bidirectionalLink(value, svalue, d2s, s2d)
				},
				], 
				MTextInput(svalue, style, state)
			)
		)
	});
}

BTextButton(text : string, onClick : (FabricEnv) -> void, style : [MTextButtonStyle], state : [MButtonState]) -> Fabric {
	BGetEnv(\env -> {
		BMaterial(MTextButton(text, \ -> {
			onClick(env)
		}, style, state))
	})
}


BSlider(name : string, style : [MSliderStyle]) -> Fabric {
	BGetEnv(\env -> {
		value = getOrMakeFabricValue(env, name, 0.0);
		BMaterial(MSlider(value, style))
	})
}
